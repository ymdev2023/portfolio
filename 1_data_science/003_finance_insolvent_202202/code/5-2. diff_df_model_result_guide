{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"diff_df_model_result_guide","provenance":[],"collapsed_sections":["eeD7MlyP4F9N","YOhl0-w54Pz4","yiJ8PXYs7Kuz"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"aZ1IaJPSyyyP","executionInfo":{"status":"ok","timestamp":1639458659487,"user_tz":-540,"elapsed":14326,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"4128d945-460b-4639-8344-8034d84cecc3"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["!sudo apt-get install -y fonts-nanum\n","!sudo fc-cache -fv\n","!rm ~/.cache/matplotlib -rf\n","\n","# #이후 런타임 다시 시작"],"metadata":{"id":"_cusSCuQy7R0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1639458678701,"user_tz":-540,"elapsed":11299,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}},"outputId":"3e86ad38-62a7-4452-c582-ef9ef3f5a442"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Reading package lists... Done\n","Building dependency tree       \n","Reading state information... Done\n","The following NEW packages will be installed:\n","  fonts-nanum\n","0 upgraded, 1 newly installed, 0 to remove and 37 not upgraded.\n","Need to get 9,604 kB of archives.\n","After this operation, 29.5 MB of additional disk space will be used.\n","Get:1 http://archive.ubuntu.com/ubuntu bionic/universe amd64 fonts-nanum all 20170925-1 [9,604 kB]\n","Fetched 9,604 kB in 4s (2,205 kB/s)\n","debconf: unable to initialize frontend: Dialog\n","debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 76, <> line 1.)\n","debconf: falling back to frontend: Readline\n","debconf: unable to initialize frontend: Readline\n","debconf: (This frontend requires a controlling tty.)\n","debconf: falling back to frontend: Teletype\n","dpkg-preconfigure: unable to re-open stdin: \n","Selecting previously unselected package fonts-nanum.\n","(Reading database ... 155222 files and directories currently installed.)\n","Preparing to unpack .../fonts-nanum_20170925-1_all.deb ...\n","Unpacking fonts-nanum (20170925-1) ...\n","Setting up fonts-nanum (20170925-1) ...\n","Processing triggers for fontconfig (2.12.6-0ubuntu2) ...\n","/usr/share/fonts: caching, new cache contents: 0 fonts, 1 dirs\n","/usr/share/fonts/truetype: caching, new cache contents: 0 fonts, 3 dirs\n","/usr/share/fonts/truetype/humor-sans: caching, new cache contents: 1 fonts, 0 dirs\n","/usr/share/fonts/truetype/liberation: caching, new cache contents: 16 fonts, 0 dirs\n","/usr/share/fonts/truetype/nanum: caching, new cache contents: 10 fonts, 0 dirs\n","/usr/local/share/fonts: caching, new cache contents: 0 fonts, 0 dirs\n","/root/.local/share/fonts: skipping, no such directory\n","/root/.fonts: skipping, no such directory\n","/var/cache/fontconfig: cleaning cache directory\n","/root/.cache/fontconfig: not cleaning non-existent cache directory\n","/root/.fontconfig: not cleaning non-existent cache directory\n","fc-cache: succeeded\n"]}]},{"cell_type":"code","source":["import warnings   \n","warnings.simplefilter(action='ignore', category=FutureWarning)\n","\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","plt.rc('font', family='NanumBarunGothic') \n","plt.rcParams[\"font.size\"] = 12\n","plt.rcParams['xtick.labelsize'] = 12.\n","plt.rcParams['ytick.labelsize'] = 12.\n","plt.rcParams['axes.unicode_minus'] = False"],"metadata":{"id":"oeSk7fkxzDAc","executionInfo":{"status":"ok","timestamp":1639458697916,"user_tz":-540,"elapsed":310,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.linear_model import SGDClassifier\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.svm import SVC\n","from sklearn.ensemble import RandomForestClassifier\n","\n","from sklearn.metrics import classification_report, confusion_matrix\n","from sklearn.metrics import  accuracy_score, precision_score, recall_score, f1_score"],"metadata":{"id":"J3MLCnnPzLKn","executionInfo":{"status":"ok","timestamp":1639458699175,"user_tz":-540,"elapsed":785,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["cd /content/drive/MyDrive/UBION_final_project/data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dnDgPvopzNU6","executionInfo":{"status":"ok","timestamp":1639458699176,"user_tz":-540,"elapsed":31,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}},"outputId":"1af7ea09-dd10-433e-ee5b-64a1e38c0eaa"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/UBION_final_project/data\n"]}]},{"cell_type":"markdown","source":["# show_result, store_result"],"metadata":{"id":"Y68pehuf3rRY"}},{"cell_type":"code","source":["def show_result(y_test, prediction):\n","  global condition\n","  CM = confusion_matrix(y_test, prediction) #Confusion_matrix\n","  A = round( accuracy_score(y_test,prediction),3)  # 정확도\n","  P = round( precision_score(y_test, prediction),3)  #정밀도\n","  R = round( recall_score(y_test, prediction), 3) #재현율\n","  F = round( f1_score(y_test, prediction), 3) #f1-score\n","  \n","  condition.append(CM)\n","  condition.append(A)\n","  condition.append(P)\n","  condition.append(R)\n","  condition.append(F)"],"metadata":{"id":"C8TkkwYZ1MwQ","executionInfo":{"status":"ok","timestamp":1639458699177,"user_tz":-540,"elapsed":26,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["# final_diff_result = pd.DataFrame(columns = ['데이터프레임', 'train_test_split(Y/R)', 't-test(Y/N)', '변수선택법', 'VIF(Y/N)','sampling 방식', '적용모델','선택된 변수','혼동행렬', 'Accuracy', 'Precision', 'Recall', 'F1-score','hyperparameter 변경'])\n","# final_diff_result.to_csv('final_diff_result.csv', index=False)"],"metadata":{"id":"QNvnOrsVCl1G","executionInfo":{"status":"ok","timestamp":1639458754895,"user_tz":-540,"elapsed":318,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":["def store_result(condition):\n","  final_diff_result = pd.read_csv('final_diff_result.csv')\n","\n","  condition= pd.DataFrame({len(final_diff_result): condition}).transpose()\n","  condition.columns = ['데이터프레임', 'train_test_split(Y/R)', 't-test(Y/N)', '변수선택법', 'VIF(Y/N)','sampling 방식', '적용모델','선택된 변수','혼동행렬', 'Accuracy', 'Precision', 'Recall', 'F1-score','hyperparameter 변경']\n","  \n","  final_diff_result = pd.concat([final_diff_result, condition], axis=0)\n","\n","  final_diff_result.to_csv('final_diff_result.csv', index=False)"],"metadata":{"id":"9QhfhKFMLToD","executionInfo":{"status":"ok","timestamp":1639458769830,"user_tz":-540,"elapsed":337,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":40,"outputs":[]},{"cell_type":"markdown","source":["# t-test"],"metadata":{"id":"2y4jaXhIMGBE"}},{"cell_type":"code","source":["def z_test(eq_var, nc, bc):\n","    from statsmodels.stats.weightstats import ztest\n","    sig_diff = []\n","\n","    for i in eq_var:\n","        ser_1 = nc[i]\n","        ser_2 = bc[i]\n","\n","        z_result = np.round(ztest(ser_1, ser_2)[1],3)\n","        if z_result < 0.01:\n","            sig_diff.append(i)\n","        else:\n","            pass\n","    return sig_diff"],"metadata":{"id":"ttxSmeETMH39","executionInfo":{"status":"ok","timestamp":1639458699179,"user_tz":-540,"elapsed":26,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["def welch_t_test(neq_var,nc_,bc_):\n","    from scipy.stats import ttest_ind\n","\n","    sig_diff1 = []\n","\n","    for i in neq_var:\n","        ser_1 = nc_[i]\n","        ser_2 = bc_[i]\n","\n","        wt_result = np.round(ttest_ind(ser_1, ser_2, equal_var=False)[1],3)\n","        if wt_result < 0.01:\n","            sig_diff1.append(i)\n","        else:\n","            pass\n","    return sig_diff1"],"metadata":{"id":"ImssHcwzMH1r","executionInfo":{"status":"ok","timestamp":1639458699180,"user_tz":-540,"elapsed":26,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["def univariate_logit(X_train, y_train, Pvalue = 0.05 ,sig_val=[]):\n","    import statsmodels.api as sm\n","    import warnings\n","    \n","    sig_SL_i = []\n","    # sig_SL_p = []\n","    # sig_SL_c = []\n","    warnings.filterwarnings(\"ignore\")\n","    for i in sig_val:\n","        result_Logit = sm.Logit(y_train,sm.add_constant(X_train[i])).fit(disp=0)\n","        Pval = result_Logit.pvalues[1]\n","        coef = result_Logit.params[1]\n","\n","        if Pval < Pvalue:\n","            sig_SL_i.append(i)\n","            # sig_SL_p.append(Pval)\n","            # sig_SL_c.append(coef)\n","            \n","        else:\n","            pass\n","    \n","    # sig_df = pd.DataFrame(list(zip(sig_SL_i, sig_SL_p,sig_SL_c)), columns =['feature', 'Pvalue', 'coef'])\n","    \n","    # return sig_df\n","    return sig_SL_i"],"metadata":{"id":"Y5oNIipcMK3L","executionInfo":{"status":"ok","timestamp":1639458699180,"user_tz":-540,"elapsed":26,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["def Excute_t_test(X_train, y_train):\n","    from scipy.stats import bartlett\n","    \n","    feature_list = X_train.columns.to_list()\n","    \n","    subset= X_train\n","    subset['차기부도여부'] = y_train\n","\n","    bc_df = subset[subset['차기부도여부']==1]\n","    nc_df = subset[subset['차기부도여부']==0]\n","\n","    #등분산, 이분산성 검정\n","    eq_var = []\n","    neq_var = []\n","    for i in subset.columns[:-1]:\n","        ser_1 = nc_df[i]\n","        ser_2 = bc_df[i]\n","\n","        lresult = np.round(bartlett(ser_1, ser_2)[1],3)\n","        if lresult < 0.05:\n","            eq_var.append(i) #등분산\n","        else:\n","            neq_var.append(i) #이분산\n","\n","    \n","    sig_diff = z_test(eq_var, nc_df, bc_df) #등분산 -> z_test\n","    sig_diff1 = welch_t_test(neq_var, nc_df, bc_df) #이분산 -> t_test\n","\n","    sig_val = sig_diff + sig_diff1\n","\n","    variable = univariate_logit(X_train, y_train, Pvalue=0.05, sig_val=sig_val)\n","\n","    return variable"],"metadata":{"id":"gzZkjQR8MLlJ","executionInfo":{"status":"ok","timestamp":1639458699180,"user_tz":-540,"elapsed":25,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":11,"outputs":[]},{"cell_type":"markdown","source":["# Excute_model"],"metadata":{"id":"2dO15q--3u-N"}},{"cell_type":"markdown","source":["## basic"],"metadata":{"id":"LjXKikUG4EYN"}},{"cell_type":"code","source":["def Excute_lg (X_train, y_train, X_test, y_test):\n","  lr = LogisticRegression(random_state=0)\n","  \n","  lr.fit(X_train, y_train) \n","  prediction = lr.predict(X_test)\n","\n","  show_result(y_test, prediction)"],"metadata":{"id":"_H6fnitQ38KR","executionInfo":{"status":"ok","timestamp":1639458699180,"user_tz":-540,"elapsed":24,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["def Excute_sgd(X_train, y_train, X_test, y_test):\n","  sgd = SGDClassifier(random_state=0)\n","\n","  sgd.fit(X_train, y_train)\n","  prediction = sgd.predict(X_test)\n","  \n","  show_result(y_test, prediction)"],"metadata":{"id":"wdB8zbTo39Av","executionInfo":{"status":"ok","timestamp":1639458699181,"user_tz":-540,"elapsed":25,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["def Excute_knn(X_train, y_train, X_test, y_test):\n","  knn = KNeighborsClassifier()\n","\n","  knn.fit(X_train, y_train)\n","  prediction = knn.predict(X_test)\n","\n","  show_result(y_test, prediction)"],"metadata":{"id":"wG2vKvzj3-Bg","executionInfo":{"status":"ok","timestamp":1639458699181,"user_tz":-540,"elapsed":22,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["def Excute_svm(X_train, y_train, X_test, y_test):\n","  svc = SVC(random_state=0)\n","\n","  svc.fit(X_train, y_train)\n","  prediction = svc.predict(X_test)\n","\n","  show_result(y_test, prediction)"],"metadata":{"id":"MBH73tUB1OlP","executionInfo":{"status":"ok","timestamp":1639458699181,"user_tz":-540,"elapsed":21,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["def Excute_dt(X_train, y_train, X_test, y_test):\n","  dt = DecisionTreeClassifier(random_state=0)\n","\n","  dt.fit(X_train, y_train)\n","  prediction = dt.predict(X_test)\n","\n","  show_result(y_test, prediction)"],"metadata":{"id":"QkZ9Az4e3_Sw","executionInfo":{"status":"ok","timestamp":1639458699182,"user_tz":-540,"elapsed":21,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["def Excute_rf(X_train, y_train, X_test, y_test):\n","  rfc = RandomForestClassifier(random_state=0)\n","\n","  rfc.fit(X_train, y_train)\n","  prediction = rfc.predict(X_test)\n","\n","  show_result(y_test, prediction)"],"metadata":{"id":"emC6Qo9Q4Bud","executionInfo":{"status":"ok","timestamp":1639458699182,"user_tz":-540,"elapsed":20,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["def Excute_pr(X_train, y_train, X_test, y_test):\n","  dt2 = DecisionTreeClassifier(max_depth=2)\n","\n","  dt2.fit(X_train, y_train)\n","  prediction = dt2.predict(X_test)\n","  \n","  show_result(y_test, prediction)"],"metadata":{"id":"weM8Trep4A8F","executionInfo":{"status":"ok","timestamp":1639458699182,"user_tz":-540,"elapsed":20,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":18,"outputs":[]},{"cell_type":"markdown","source":["## change_cutoff"],"metadata":{"id":"eeD7MlyP4F9N"}},{"cell_type":"code","source":["def change_cutoff(result_df):\n","  value_00 = result_df[(result_df['actual']==0) & (result_df['prediction']== 0)]['부도_prob'].max()\n","  value_01 = result_df[(result_df['actual']==0) & (result_df['prediction']== 1)]['부도_prob'].min()\n","  value_10 = result_df[(result_df['actual']==1) & (result_df['prediction']== 0)]['부도_prob'].max()\n","  value_11 = result_df[(result_df['actual']==1) & (result_df['prediction']== 1)]['부도_prob'].min()\n","\n","  if value_10 < value_00:\n","    cutoff = value_11\n","    result_df.loc[(result_df['actual']==0) & (result_df['prediction']== 1) & (result_df['부도_prob']<cutoff) , 'prediction'] = 0\n","  \n","  if value_11 > value_01:\n","    cutoff= value_00\n","    result_df.loc[(result_df['actual']==1) & (result_df['prediction']== 0) & (result_df['부도_prob']>cutoff) , 'prediction'] = 1\n","\n","  return result_df"],"metadata":{"id":"WmHF7Usl6Jkd","executionInfo":{"status":"ok","timestamp":1639458699182,"user_tz":-540,"elapsed":19,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["def Excute_lg_change_cutoff (X_train, y_train, X_test, y_test):\n","  lr = LogisticRegression(random_state=0, probability=True)\n","  lr.fit(X_train, y_train) \n","  prediction = lr.predict(X_test)\n","  prediction_prob =lr.predict_proba(X_test)\n","\n","  result_df = pd.DataFrame(prediction_prob, columns=['정상_prob','부도_prob'])\n","  result_df['actual'] = y_test\n","  result_df['prediction'] = prediction\n","\n","  return_df = change_cutoff(result_df)\n","  show_result(result_df['actual'], result_df['prediction'])"],"metadata":{"id":"bQAn7jUE4Iv-","executionInfo":{"status":"ok","timestamp":1639458699183,"user_tz":-540,"elapsed":19,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["def Excute_sgd_change_cutoff(X_train, y_train, X_test, y_test):\n","  sgd = SGDClassifier(random_state=0)\n","  sgd.fit(X_train, y_train)\n","  prediction = sgd.predict(X_test)\n","  prediction_prob =sgd.predict_proba(X_test)\n","\n","  result_df = pd.DataFrame(prediction_prob, columns=['정상_prob','부도_prob'])\n","  result_df['actual'] = y_test\n","  result_df['prediction'] = prediction\n","\n","  return_df = change_cutoff(result_df)\n","  show_result(result_df['actual'], result_df['prediction'])"],"metadata":{"id":"zA-DIrht4Jod","executionInfo":{"status":"ok","timestamp":1639458699183,"user_tz":-540,"elapsed":18,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["def Excute_svm_change_cutoff(X_train, y_train, X_test, y_test):\n","  svc = SVC(random_state=0, probability=True)\n","  svc.fit(X_train, y_train)\n","  prediction = svc.predict(X_test)\n","  prediction_prob =svc.predict_proba(X_test)\n","\n","  result_df = pd.DataFrame(prediction_prob, columns=['정상_prob','부도_prob'])\n","  result_df['actual'] = y_test\n","  result_df['prediction'] = prediction\n","\n","  return_df = change_cutoff(result_df)\n","  show_result(result_df['actual'], result_df['prediction'])"],"metadata":{"id":"A7MWqRit4KjB","executionInfo":{"status":"ok","timestamp":1639458699183,"user_tz":-540,"elapsed":18,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["def Excute_pr_change_cutoff(X_train, y_train, X_test, y_test):\n","  dt2 = DecisionTreeClassifier(max_depth=2)\n","  dt2.fit(X_train, y_train)\n","  prediction = dt2.predict(X_test)\n","  prediction_prob =dt2.predict_proba(X_test)\n","\n","  result_df = pd.DataFrame(prediction_prob, columns=['정상_prob','부도_prob'])\n","  result_df['actual'] = y_test\n","  result_df['prediction'] = prediction\n","\n","  return_df = change_cutoff(result_df)\n","  show_result(result_df['actual'], result_df['prediction'])"],"metadata":{"id":"f1pcf28S4Nds","executionInfo":{"status":"ok","timestamp":1639458699184,"user_tz":-540,"elapsed":18,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["def Excute_dt_change_cutoff(X_train, y_train, X_test, y_test):\n","  dt = DecisionTreeClassifier(random_state=0)\n","  dt.fit(X_train, y_train)\n","  prediction = dt.predict(X_test)\n","  prediction_prob =dt.predict_proba(X_test)\n","\n","  result_df = pd.DataFrame(prediction_prob, columns=['정상_prob','부도_prob'])\n","  result_df['actual'] = y_test\n","  result_df['prediction'] = prediction\n","\n","  return_df = change_cutoff(result_df)\n","  show_result(result_df['actual'], result_df['prediction'])"],"metadata":{"id":"ZgBTbJiM4Moy","executionInfo":{"status":"ok","timestamp":1639458699184,"user_tz":-540,"elapsed":18,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["def Excute_knn_change_cutoff(X_train, y_train, X_test, y_test):\n","  knn = KNeighborsClassifier()\n","  knn.fit(X_train, y_train)\n","  prediction = knn.predict(X_test)\n","  prediction_prob =knn.predict_proba(X_test)\n","\n","  result_df = pd.DataFrame(prediction_prob, columns=['정상_prob','부도_prob'])\n","  result_df['actual'] = y_test\n","  result_df['prediction'] = prediction\n","\n","  return_df = change_cutoff(result_df)\n","  show_result(result_df['actual'], result_df['prediction'])"],"metadata":{"id":"DmXbuMaa4L0F","executionInfo":{"status":"ok","timestamp":1639458699184,"user_tz":-540,"elapsed":18,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["def Excute_rf_change_cutoff(X_train, y_train, X_test, y_test):\n","  rfc = RandomForestClassifier(random_state=0)\n","  rfc.fit(X_train, y_train)\n","  prediction = rfc.predict(X_test)\n","  prediction_prob =rfc.predict_proba(X_test)\n","\n","  result_df = pd.DataFrame(prediction_prob, columns=['정상_prob','부도_prob'])\n","  result_df['actual'] = y_test\n","  result_df['prediction'] = prediction\n","\n","  return_df = change_cutoff(result_df)\n","  show_result(result_df['actual'], result_df['prediction'])"],"metadata":{"id":"iHTjQJvT4PEW","executionInfo":{"status":"ok","timestamp":1639458699658,"user_tz":-540,"elapsed":491,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":26,"outputs":[]},{"cell_type":"markdown","source":["# sampling"],"metadata":{"id":"YOhl0-w54Pz4"}},{"cell_type":"code","source":["def RUSE(X_train, y_train):\n","  from imblearn.under_sampling import RandomUnderSampler\n","  rus = RandomUnderSampler()\n","  \n","  X_undersampled, y_undersampled = rus.fit_resample(X_train, y_train)\n","  \n","  return X_undersampled, y_undersampled"],"metadata":{"id":"NVuJddau1phF","executionInfo":{"status":"ok","timestamp":1639458699658,"user_tz":-540,"elapsed":10,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["def ROSE(X_train, y_train):\n","  from imblearn.over_sampling import RandomOverSampler\n","  ros = RandomOverSampler()\n","\n","  X_oversampled, y_oversampled = ros.fit_resample(X_train, y_train)\n","  \n","  return X_oversampled, y_oversampled"],"metadata":{"id":"TQD36bk84s65","executionInfo":{"status":"ok","timestamp":1639458699658,"user_tz":-540,"elapsed":9,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["def SMOTE(X_train, y_train):\n","  from imblearn.over_sampling import SMOTE\n","  smote = SMOTE()\n","  X_smoted, y_smoted = smote.fit_resample(X_train,y_train)\n","  \n","  return X_smoted, y_smoted"],"metadata":{"id":"FV4vTutZ4UTC","executionInfo":{"status":"ok","timestamp":1639458699659,"user_tz":-540,"elapsed":9,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":29,"outputs":[]},{"cell_type":"markdown","source":["# feature_selection"],"metadata":{"id":"mjLGDTJ542YX"}},{"cell_type":"code","source":["def forward_feature_selection(X_train, y_train, variables):\n","    import statsmodels.api as sm\n","    y = y_train ## 반응 변수\n","    selected_variables = [] ## 선택된 변수들\n","    sl_enter = 0.05\n","    sv_per_step = [] ## 각 스텝별로 선택된 변수들\n","    while len(variables) > 0:\n","        remainder = list(set(variables) - set(selected_variables))\n","        pval = pd.Series(index=remainder) ## 변수의 p-value\n","        ## 기존에 포함된 변수와 새로운 변수 하나씩 돌아가면서 \n","        ## 선형 모형을 적합한다.\n","        for col in remainder: \n","            X = X_train[selected_variables+[col]]\n","            X = sm.add_constant(X)\n","            model = sm.Logit(y,X).fit(disp=0)\n","            pval[col] = model.pvalues[col]\n","        min_pval = pval.min()\n","        if min_pval < sl_enter: ## 최소 p-value 값이 기준 값보다 작으면 포함\n","            selected_variables.append(pval.idxmin())\n","            sv_per_step.append(selected_variables.copy())\n","        else:\n","            break\n","    return selected_variables"],"metadata":{"id":"y9RSdlo45pkA","executionInfo":{"status":"ok","timestamp":1639458699659,"user_tz":-540,"elapsed":9,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["def backward_feature_selection(X_train, y_train,variables):\n","    import statsmodels.api as sm\n","    y = y_train ## 반응 변수\n","    selected_variables = variables ## 초기에는 모든 변수가 선택된 상태\n","    sl_remove = 0.05\n","    sv_per_step = [] ## 각 스텝별로 선택된 변수들\n","    while len(selected_variables) > 0:\n","        X = sm.add_constant(X_train[selected_variables])\n","        p_vals = sm.Logit(y,X).fit(disp=0).pvalues[1:] ## 절편항의 p-value는 뺀다\n","        max_pval = p_vals.max() ## 최대 p-value\n","        if max_pval >= sl_remove: ## 최대 p-value값이 기준값보다 크거나 같으면 제외\n","            remove_variable = p_vals.idxmax()\n","            selected_variables.remove(remove_variable)\n","            sv_per_step.append(selected_variables.copy())\n","        else:\n","            break\n","    return selected_variables"],"metadata":{"id":"Q-2RPpuI6IE0","executionInfo":{"status":"ok","timestamp":1639458699659,"user_tz":-540,"elapsed":8,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["def stepwise_feature_selection(X_train, y_train, variables):\n","    import statsmodels.api as sm\n","    y = y_train ## 반응 변수\n","    selected_variables = [] ## 선택된 변수들\n","    sl_enter = 0.05\n","    sl_remove = 0.05\n","    sv_per_step = [] ## 각 스텝별로 선택된 변수들\n","    while len(variables) > 0:\n","        remainder = list(set(variables) - set(selected_variables))\n","        pval = pd.Series(index=remainder) ## 변수의 p-value\n","        ## 기존에 포함된 변수와 새로운 변수 하나씩 돌아가면서 \n","        ## 선형 모형을 적합한다.\n","        for col in remainder: \n","            X = X_train[selected_variables+[col]]\n","            X = sm.add_constant(X)\n","            model = sm.Logit(y,X).fit(disp=0)\n","            pval[col] = model.pvalues[col]\n","    \n","        min_pval = pval.min()\n","        if min_pval < sl_enter: ## 최소 p-value 값이 기준 값보다 작으면 포함\n","            selected_variables.append(pval.idxmin())\n","            ## 선택된 변수들에대해서\n","            ## 어떤 변수를 제거할지 고른다.\n","            while len(selected_variables) > 0:\n","                selected_X = X_train[selected_variables]\n","                selected_X = sm.add_constant(selected_X)\n","                selected_pval = sm.Logit(y,selected_X).fit(disp=0).pvalues[1:] ## 절편항의 p-value는 뺀다\n","                max_pval = selected_pval.max()\n","                if max_pval >= sl_remove: ## 최대 p-value값이 기준값보다 크거나 같으면 제외\n","                    remove_variable = selected_pval.idxmax()\n","                    selected_variables.remove(remove_variable)\n","                else:\n","                    break\n","            sv_per_step.append(selected_variables.copy())\n","        else:\n","            break\n","    return selected_variables"],"metadata":{"id":"rt2YFiaU41kU","executionInfo":{"status":"ok","timestamp":1639458699660,"user_tz":-540,"elapsed":9,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["def filter_vif(X_train, variables):\n","    from patsy import dmatrices\n","    import statsmodels.api as sm\n","    from statsmodels.stats.outliers_influence import variance_inflation_factor\n","\n","    vif = pd.DataFrame()\n","    vif['VIF'] = [variance_inflation_factor(X_train[variables].values, i) for i in range(X_train[variables].shape[1])]\n","    vif['feature'] = X_train[variables].columns\n","    \n","    non_vif_features = vif.loc[vif['VIF'] <= 10]['feature']\n","    return non_vif_features"],"metadata":{"id":"k9d5FNUS2v-I","executionInfo":{"status":"ok","timestamp":1639458699660,"user_tz":-540,"elapsed":9,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":33,"outputs":[]},{"cell_type":"markdown","source":["# train/test/split"],"metadata":{"id":"yiJ8PXYs7Kuz"}},{"cell_type":"code","source":["def split_by_Y(df):\n","    after_2018  = df.loc[df['회계년도'] >= 2018]['차기부도여부'].value_counts()[1]\n","    before_2018 = df.loc[df['회계년도'] <  2018]['차기부도여부'].value_counts()[1]\n","    SIZE = after_2018/len(df)\n","\n","    test = df[df['회계년도'] >= 2018]\n","    train = df[df['회계년도'] < 2018]\n","    \n","    test.drop(columns = ['회계년도','회사명', '거래소코드','산업대분류'], inplace=True)\n","    train.drop(columns= ['회계년도','회사명', '거래소코드','산업대분류'], inplace=True)\n","\n","    X_train = train.drop(['차기부도여부'], axis= 1)\n","    y_train = train['차기부도여부']\n","\n","    X_test = test.drop(['차기부도여부'], axis=1)\n","    y_test = test['차기부도여부']\n","\n","    return X_train, y_train, X_test, y_test"],"metadata":{"id":"ixCdDM1e7IUH","executionInfo":{"status":"ok","timestamp":1639458699660,"user_tz":-540,"elapsed":8,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":34,"outputs":[]},{"cell_type":"code","source":["def split_by_R(df):\n","    from sklearn.model_selection import train_test_split\n","    \n","    data = df.drop(['차기부도여부'], axis= 1)\n","    target = df['차기부도여부']\n","\n","    # train_test_split\n","    X_train, X_test, y_train, y_test = train_test_split(data, target, test_size=0.178, shuffle=True, stratify=target, random_state=34)\n","    X_test.drop(columns = ['회계년도','회사명', '거래소코드','산업대분류'], inplace=True)\n","    X_train.drop(columns= ['회계년도','회사명', '거래소코드','산업대분류'], inplace=True)\n","\n","    return X_train, y_train, X_test, y_test"],"metadata":{"id":"fHDsNqfV7u4_","executionInfo":{"status":"ok","timestamp":1639458699661,"user_tz":-540,"elapsed":9,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":35,"outputs":[]},{"cell_type":"markdown","source":["# main"],"metadata":{"id":"Mv3xeqWA-RCO"}},{"cell_type":"code","source":["def RUN_ALL(filename, train_test_split_method, tt, feature_selection_method, vv, sampling_method, model_name):\n","    df = pd.read_csv(filename+'.csv')\n","    global condition\n","\n","    if train_test_split_method == 'Y' :\n","        X_train, y_train, X_test, y_test = split_by_Y(df)\n","    elif train_test_split_method == 'R' :\n","        X_train, y_train, X_test, y_test = split_by_R(df)\n","\n","    if tt =='t_Y':\n","        variable = Excute_t_test(X_train, y_train)\n","    elif tt =='t_N':\n","        variable = X_train.columns.tolist()\n","\n","    if feature_selection_method == 'forward':\n","        selected_variables_list = forward_feature_selection(X_train, y_train, variable)\n","    elif feature_selection_method == 'backward':\n","        selected_variables_list = backward_feature_selection(X_train, y_train, variable)\n","    elif feature_selection_method == 'stepwise':\n","        selected_variables_list = stepwise_feature_selection(X_train, y_train, variable)\n","    elif feature_selection_method == 'None':\n","        selected_variables_list = variable\n","\n","    if vv =='v_Y':\n","        selected_variables_list = filter_vif(X_train, selected_variables_list)\n","        condition.append(selected_variables_list.tolist())\n","    elif vv =='v_N':\n","        condition.append(selected_variables_list)\n","\n","    X_train = X_train[selected_variables_list]\n","    X_test = X_test[selected_variables_list]\n","\n","    if sampling_method == 'RUSE' :\n","        sampled_X_train, sampled_y_train = RUSE( X_train, y_train )\n","    elif sampling_method =='ROSE' :\n","        sampled_X_train, sampled_y_train = ROSE( X_train, y_train )\n","    elif sampling_method =='SMOTE' :\n","        sampled_X_train, sampled_y_train = SMOTE( X_train, y_train)\n","    elif sampling_method =='None':\n","        sampled_X_train, sampled_y_train = X_train, y_train\n","\n","\n","    if model_name =='lg':\n","        Excute_lg(sampled_X_train, sampled_y_train, X_test, y_test)\n","    elif model_name =='sgd':\n","        Excute_sgd(sampled_X_train, sampled_y_train, X_test, y_test)\n","    elif model_name =='knn':\n","        Excute_knn(sampled_X_train, sampled_y_train, X_test, y_test)\n","    elif model_name =='svm':\n","        Excute_svm(sampled_X_train, sampled_y_train, X_test, y_test)\n","    elif model_name =='dt':\n","        Excute_dt(sampled_X_train, sampled_y_train, X_test, y_test)\n","    elif model_name =='pr':\n","        Excute_pr(sampled_X_train, sampled_y_train, X_test, y_test)\n","    elif model_name =='rf':\n","        Excute_rf(sampled_X_train, sampled_y_train, X_test, y_test)\n","    "],"metadata":{"id":"c1WpZyfk6pvO","executionInfo":{"status":"ok","timestamp":1639458699661,"user_tz":-540,"elapsed":9,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["for df in ['diff_df']:\n","    for split in ['Y', 'R']:\n","        for tt in ['t_Y']:\n","            for fs in ['forward','backward','stepwise','None']:\n","                for vv in ['v_N','v_Y']:\n","                    for sm in ['RUSE','ROSE','SMOTE','None']:\n","                        for m in ['lg','sgd','knn','svm','dt','pr','rf']:\n","                            condition = [df, split, tt, fs, vv, sm, m]\n","                            print(\"***\", condition)\n","                            RUN_ALL(condition[0], condition[1], condition[2], condition[3], condition[4], condition[5], condition[6])\n","                            condition.append('none') # parameter 조정 X\n","                            store_result(condition)"],"metadata":{"id":"jK6pS07fRPRr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1639463167593,"user_tz":-540,"elapsed":4393616,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}},"outputId":"a59e54ac-ad39-43e1-fa76-8a8d54aa6b14"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'RUSE', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'RUSE', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'RUSE', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'RUSE', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'RUSE', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'RUSE', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'RUSE', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'ROSE', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'ROSE', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'ROSE', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'ROSE', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'ROSE', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'ROSE', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'ROSE', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'SMOTE', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'SMOTE', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'SMOTE', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'SMOTE', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'SMOTE', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'SMOTE', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'SMOTE', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'None', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'None', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'None', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'None', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'None', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'None', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_N', 'None', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'RUSE', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'RUSE', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'RUSE', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'RUSE', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'RUSE', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'RUSE', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'RUSE', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'ROSE', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'ROSE', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'ROSE', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'ROSE', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'ROSE', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'ROSE', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'ROSE', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'SMOTE', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'SMOTE', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'SMOTE', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'SMOTE', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'SMOTE', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'SMOTE', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'SMOTE', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'None', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'None', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'None', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'None', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'None', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'None', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'forward', 'v_Y', 'None', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'RUSE', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'RUSE', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'RUSE', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'RUSE', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'RUSE', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'RUSE', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'RUSE', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'ROSE', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'ROSE', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'ROSE', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'ROSE', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'ROSE', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'ROSE', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'ROSE', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'SMOTE', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'SMOTE', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'SMOTE', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'SMOTE', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'SMOTE', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'SMOTE', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'SMOTE', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'None', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'None', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'None', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'None', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'None', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'None', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_N', 'None', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'RUSE', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'RUSE', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'RUSE', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'RUSE', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'RUSE', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'RUSE', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'RUSE', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'ROSE', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'ROSE', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'ROSE', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'ROSE', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'ROSE', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'ROSE', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'ROSE', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'SMOTE', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'SMOTE', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'SMOTE', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'SMOTE', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'SMOTE', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'SMOTE', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'SMOTE', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'None', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'None', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'None', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'None', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'None', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'None', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'backward', 'v_Y', 'None', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'RUSE', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'RUSE', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'RUSE', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'RUSE', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'RUSE', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'RUSE', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'RUSE', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'ROSE', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'ROSE', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'ROSE', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'ROSE', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'ROSE', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'ROSE', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'ROSE', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'SMOTE', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'SMOTE', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'SMOTE', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'SMOTE', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'SMOTE', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'SMOTE', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'SMOTE', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'None', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'None', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'None', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'None', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'None', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'None', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_N', 'None', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'RUSE', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'RUSE', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'RUSE', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'RUSE', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'RUSE', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'RUSE', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'RUSE', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'ROSE', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'ROSE', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'ROSE', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'ROSE', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'ROSE', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'ROSE', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'ROSE', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'SMOTE', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'SMOTE', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'SMOTE', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'SMOTE', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'SMOTE', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'SMOTE', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'SMOTE', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'None', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'None', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'None', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'None', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'None', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'None', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'stepwise', 'v_Y', 'None', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'RUSE', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'RUSE', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'RUSE', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'RUSE', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'RUSE', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'RUSE', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'RUSE', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'ROSE', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'ROSE', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'ROSE', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'ROSE', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'ROSE', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'ROSE', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'ROSE', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'SMOTE', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'SMOTE', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'SMOTE', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'SMOTE', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'SMOTE', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'SMOTE', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'SMOTE', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'None', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'None', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'None', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'None', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'None', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'None', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_N', 'None', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'RUSE', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'RUSE', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'RUSE', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'RUSE', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'RUSE', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'RUSE', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'RUSE', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'ROSE', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'ROSE', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'ROSE', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'ROSE', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'ROSE', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'ROSE', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'ROSE', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'SMOTE', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'SMOTE', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'SMOTE', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'SMOTE', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'SMOTE', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'SMOTE', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'SMOTE', 'rf']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'None', 'lg']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'None', 'sgd']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'None', 'knn']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'None', 'svm']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'None', 'dt']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'None', 'pr']\n","*** ['diff_df', 'Y', 't_Y', 'None', 'v_Y', 'None', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'RUSE', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'RUSE', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'RUSE', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'RUSE', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'RUSE', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'RUSE', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'RUSE', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'ROSE', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'ROSE', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'ROSE', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'ROSE', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'ROSE', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'ROSE', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'ROSE', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'SMOTE', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'SMOTE', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'SMOTE', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'SMOTE', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'SMOTE', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'SMOTE', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'SMOTE', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'None', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'None', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'None', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'None', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'None', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'None', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_N', 'None', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'RUSE', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'RUSE', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'RUSE', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'RUSE', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'RUSE', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'RUSE', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'RUSE', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'ROSE', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'ROSE', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'ROSE', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'ROSE', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'ROSE', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'ROSE', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'ROSE', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'SMOTE', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'SMOTE', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'SMOTE', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'SMOTE', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'SMOTE', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'SMOTE', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'SMOTE', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'None', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'None', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'None', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'None', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'None', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'None', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'forward', 'v_Y', 'None', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'RUSE', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'RUSE', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'RUSE', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'RUSE', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'RUSE', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'RUSE', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'RUSE', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'ROSE', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'ROSE', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'ROSE', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'ROSE', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'ROSE', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'ROSE', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'ROSE', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'SMOTE', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'SMOTE', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'SMOTE', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'SMOTE', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'SMOTE', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'SMOTE', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'SMOTE', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'None', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'None', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'None', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'None', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'None', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'None', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_N', 'None', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'RUSE', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'RUSE', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'RUSE', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'RUSE', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'RUSE', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'RUSE', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'RUSE', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'ROSE', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'ROSE', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'ROSE', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'ROSE', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'ROSE', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'ROSE', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'ROSE', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'SMOTE', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'SMOTE', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'SMOTE', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'SMOTE', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'SMOTE', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'SMOTE', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'SMOTE', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'None', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'None', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'None', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'None', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'None', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'None', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'backward', 'v_Y', 'None', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'RUSE', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'RUSE', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'RUSE', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'RUSE', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'RUSE', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'RUSE', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'RUSE', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'ROSE', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'ROSE', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'ROSE', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'ROSE', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'ROSE', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'ROSE', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'ROSE', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'SMOTE', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'SMOTE', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'SMOTE', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'SMOTE', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'SMOTE', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'SMOTE', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'SMOTE', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'None', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'None', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'None', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'None', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'None', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'None', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_N', 'None', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'RUSE', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'RUSE', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'RUSE', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'RUSE', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'RUSE', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'RUSE', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'RUSE', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'ROSE', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'ROSE', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'ROSE', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'ROSE', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'ROSE', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'ROSE', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'ROSE', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'SMOTE', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'SMOTE', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'SMOTE', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'SMOTE', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'SMOTE', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'SMOTE', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'SMOTE', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'None', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'None', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'None', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'None', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'None', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'None', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'stepwise', 'v_Y', 'None', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'RUSE', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'RUSE', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'RUSE', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'RUSE', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'RUSE', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'RUSE', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'RUSE', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'ROSE', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'ROSE', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'ROSE', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'ROSE', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'ROSE', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'ROSE', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'ROSE', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'SMOTE', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'SMOTE', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'SMOTE', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'SMOTE', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'SMOTE', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'SMOTE', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'SMOTE', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'None', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'None', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'None', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'None', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'None', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'None', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_N', 'None', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'RUSE', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'RUSE', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'RUSE', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'RUSE', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'RUSE', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'RUSE', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'RUSE', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'ROSE', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'ROSE', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'ROSE', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'ROSE', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'ROSE', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'ROSE', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'ROSE', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'SMOTE', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'SMOTE', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'SMOTE', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'SMOTE', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'SMOTE', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'SMOTE', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'SMOTE', 'rf']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'None', 'lg']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'None', 'sgd']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'None', 'knn']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'None', 'svm']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'None', 'dt']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'None', 'pr']\n","*** ['diff_df', 'R', 't_Y', 'None', 'v_Y', 'None', 'rf']\n"]}]},{"cell_type":"code","source":["final_diff_result = pd.read_csv('final_diff_result.csv')"],"metadata":{"id":"MBXcVenpW5j1","executionInfo":{"status":"ok","timestamp":1639463523230,"user_tz":-540,"elapsed":340,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["final_diff_result.sort_values(by=['Recall', 'Precision'], ascending= [False, False])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"NT2t-CPjozrL","executionInfo":{"status":"ok","timestamp":1639463576956,"user_tz":-540,"elapsed":23,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}},"outputId":"cf8866dc-3edc-47b6-b251-a3dd8d667f25"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>데이터프레임</th>\n","      <th>train_test_split(Y/R)</th>\n","      <th>t-test(Y/N)</th>\n","      <th>변수선택법</th>\n","      <th>VIF(Y/N)</th>\n","      <th>sampling 방식</th>\n","      <th>적용모델</th>\n","      <th>선택된 변수</th>\n","      <th>혼동행렬</th>\n","      <th>Accuracy</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","      <th>F1-score</th>\n","      <th>hyperparameter 변경</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>426</th>\n","      <td>diff_df</td>\n","      <td>R</td>\n","      <td>t_Y</td>\n","      <td>None</td>\n","      <td>v_Y</td>\n","      <td>RUSE</td>\n","      <td>rf</td>\n","      <td>['growth_rate_수지비율', 'growth_rate_사내유보 대 자기자본비...</td>\n","      <td>[[2274  583]\\n [   2   28]]</td>\n","      <td>0.797</td>\n","      <td>0.046</td>\n","      <td>0.933</td>\n","      <td>0.087</td>\n","      <td>none</td>\n","    </tr>\n","    <tr>\n","      <th>286</th>\n","      <td>diff_df</td>\n","      <td>R</td>\n","      <td>t_Y</td>\n","      <td>backward</td>\n","      <td>v_N</td>\n","      <td>RUSE</td>\n","      <td>rf</td>\n","      <td>['growth_rate_수지비율', 'growth_rate_유동자산 대 비유동자산...</td>\n","      <td>[[2214  643]\\n [   2   28]]</td>\n","      <td>0.777</td>\n","      <td>0.042</td>\n","      <td>0.933</td>\n","      <td>0.080</td>\n","      <td>none</td>\n","    </tr>\n","    <tr>\n","      <th>370</th>\n","      <td>diff_df</td>\n","      <td>R</td>\n","      <td>t_Y</td>\n","      <td>stepwise</td>\n","      <td>v_Y</td>\n","      <td>RUSE</td>\n","      <td>rf</td>\n","      <td>['growth_rate_자기자본순이익률', 'growth_rate_유보액대비율',...</td>\n","      <td>[[2216  641]\\n [   2   28]]</td>\n","      <td>0.777</td>\n","      <td>0.042</td>\n","      <td>0.933</td>\n","      <td>0.080</td>\n","      <td>none</td>\n","    </tr>\n","    <tr>\n","      <th>230</th>\n","      <td>diff_df</td>\n","      <td>R</td>\n","      <td>t_Y</td>\n","      <td>forward</td>\n","      <td>v_N</td>\n","      <td>RUSE</td>\n","      <td>rf</td>\n","      <td>['growth_rate_자기자본순이익률', 'growth_rate_유보액대비율',...</td>\n","      <td>[[2288  569]\\n [   3   27]]</td>\n","      <td>0.802</td>\n","      <td>0.045</td>\n","      <td>0.900</td>\n","      <td>0.086</td>\n","      <td>none</td>\n","    </tr>\n","    <tr>\n","      <th>342</th>\n","      <td>diff_df</td>\n","      <td>R</td>\n","      <td>t_Y</td>\n","      <td>stepwise</td>\n","      <td>v_N</td>\n","      <td>RUSE</td>\n","      <td>rf</td>\n","      <td>['growth_rate_자기자본순이익률', 'growth_rate_유보액대비율',...</td>\n","      <td>[[2239  618]\\n [   3   27]]</td>\n","      <td>0.785</td>\n","      <td>0.042</td>\n","      <td>0.900</td>\n","      <td>0.080</td>\n","      <td>none</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>433</th>\n","      <td>diff_df</td>\n","      <td>R</td>\n","      <td>t_Y</td>\n","      <td>None</td>\n","      <td>v_Y</td>\n","      <td>ROSE</td>\n","      <td>rf</td>\n","      <td>['growth_rate_수지비율', 'growth_rate_사내유보 대 자기자본비...</td>\n","      <td>[[2857    0]\\n [  30    0]]</td>\n","      <td>0.990</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>none</td>\n","    </tr>\n","    <tr>\n","      <th>443</th>\n","      <td>diff_df</td>\n","      <td>R</td>\n","      <td>t_Y</td>\n","      <td>None</td>\n","      <td>v_Y</td>\n","      <td>None</td>\n","      <td>knn</td>\n","      <td>['growth_rate_수지비율', 'growth_rate_사내유보 대 자기자본비...</td>\n","      <td>[[2857    0]\\n [  30    0]]</td>\n","      <td>0.990</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>none</td>\n","    </tr>\n","    <tr>\n","      <th>444</th>\n","      <td>diff_df</td>\n","      <td>R</td>\n","      <td>t_Y</td>\n","      <td>None</td>\n","      <td>v_Y</td>\n","      <td>None</td>\n","      <td>svm</td>\n","      <td>['growth_rate_수지비율', 'growth_rate_사내유보 대 자기자본비...</td>\n","      <td>[[2857    0]\\n [  30    0]]</td>\n","      <td>0.990</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>none</td>\n","    </tr>\n","    <tr>\n","      <th>446</th>\n","      <td>diff_df</td>\n","      <td>R</td>\n","      <td>t_Y</td>\n","      <td>None</td>\n","      <td>v_Y</td>\n","      <td>None</td>\n","      <td>pr</td>\n","      <td>['growth_rate_수지비율', 'growth_rate_사내유보 대 자기자본비...</td>\n","      <td>[[2857    0]\\n [  30    0]]</td>\n","      <td>0.990</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>none</td>\n","    </tr>\n","    <tr>\n","      <th>447</th>\n","      <td>diff_df</td>\n","      <td>R</td>\n","      <td>t_Y</td>\n","      <td>None</td>\n","      <td>v_Y</td>\n","      <td>None</td>\n","      <td>rf</td>\n","      <td>['growth_rate_수지비율', 'growth_rate_사내유보 대 자기자본비...</td>\n","      <td>[[2857    0]\\n [  30    0]]</td>\n","      <td>0.990</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","      <td>none</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>448 rows × 14 columns</p>\n","</div>"],"text/plain":["      데이터프레임 train_test_split(Y/R)  ... F1-score hyperparameter 변경\n","426  diff_df                     R  ...    0.087              none\n","286  diff_df                     R  ...    0.080              none\n","370  diff_df                     R  ...    0.080              none\n","230  diff_df                     R  ...    0.086              none\n","342  diff_df                     R  ...    0.080              none\n","..       ...                   ...  ...      ...               ...\n","433  diff_df                     R  ...    0.000              none\n","443  diff_df                     R  ...    0.000              none\n","444  diff_df                     R  ...    0.000              none\n","446  diff_df                     R  ...    0.000              none\n","447  diff_df                     R  ...    0.000              none\n","\n","[448 rows x 14 columns]"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["sns.scatterplot(x= 'Recall', y= 'Precision', data= final_diff_result)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":301},"id":"2cTlfvTgpCeF","executionInfo":{"status":"ok","timestamp":1639463676385,"user_tz":-540,"elapsed":871,"user":{"displayName":"윤영주","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18155336044487350880"}},"outputId":"6ad7f445-cd5d-466e-f747-76b74b9660d3"},"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f38ab152350>"]},"metadata":{},"execution_count":49},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":[""],"metadata":{"id":"nlEP_pI_pggf"},"execution_count":null,"outputs":[]}]}